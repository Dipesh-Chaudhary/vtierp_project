name: VTIERP Custom CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ] 
  pull_request:
    branches: [ "main" ]

env:
  API_IMAGE_NAME: vtierp-api-custom 
  STREAMLIT_IMAGE_NAME: vtierp-streamlit-custom

jobs:
  lint-and-test: # You might want to rename this job if linting is removed, e.g., to "setup-and-test"
    name: Setup and Test Code # Renamed job display name
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install ALL Python dependencies for testing
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 
        pip install -r requirements_streamlit.txt 
        pip install pytest pytest-asyncio # Flake8 removed from here if not used
        # If you still want flake8 available locally but not run in CI:
        # pip install flake8 

    # - name: Lint with Flake8 # This step is now commented out
    #   run: |
    #     flake8 . --count --show-source --statistics

    - name: Run Pytests (if any)
      env:
        PYTHONPATH: ${{ github.workspace }} 
      run: |
        # If you have no tests yet, this step can be commented out or made optional
        # For example, to run tests only if the 'tests' directory exists:
        if [ -d "tests" ]; then
          pytest tests/
        else
          echo "No 'tests' directory found, skipping pytest."
        fi

  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    # Ensure this job still runs even if the "lint-and-test" job has a different outcome
    # or if you want it to be independent for now.
    # If "lint-and-test" is just setup now, `needs: lint-and-test` is fine.
    needs: lint-and-test 
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: image=moby/buildkit:v0.12.4

    - name: Build and push API Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        dockerfile: Dockerfile.api
        push: false 
        tags: ${{ env.API_IMAGE_NAME }}:latest, ${{ env.API_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Streamlit Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        dockerfile: Dockerfile.streamlit
        push: false 
        tags: ${{ env.STREAMLIT_IMAGE_NAME }}:latest, ${{ env.STREAMLIT_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max