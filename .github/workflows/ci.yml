name: VTIERP Custom CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ] 
  pull_request:
    branches: [ "main" ]

env:
  API_IMAGE_NAME: vtierp-api-custom 
  STREAMLIT_IMAGE_NAME: vtierp-streamlit-custom

jobs:
  lint-and-test:
    name: Lint and Test Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install ALL Python dependencies for testing
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt # Installs API + core dependencies
        pip install -r requirements_streamlit.txt # Installs Streamlit specific deps if any not in main
        pip install flake8 pytest pytest-asyncio # Testing tools

    - name: Lint with Flake8
      run: |
        flake8 . --count --show-source --statistics # Uses project .flake8 config

    - name: Run Pytests
      env:
        # GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY_CI_TEST }} # If tests need API key
        PYTHONPATH: ${{ github.workspace }} # Ensure 'app' can be imported
      run: |
        pytest tests/ # Assuming tests are in 'tests' folder

  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: lint-and-test 
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: image=moby/buildkit:v0.12.4

    # Login to Docker Hub (Uncomment and configure secrets if pushing)
    # - name: Login to Docker Hub
    #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
    #     password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push API Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        dockerfile: Dockerfile.api
        push: false # Change to true when ready to push to registry
        tags: ${{ env.API_IMAGE_NAME }}:latest, ${{ env.API_IMAGE_NAME }}:${{ github.sha }}
        # Example for Docker Hub: tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.API_IMAGE_NAME }}:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.API_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Streamlit Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        dockerfile: Dockerfile.streamlit
        push: false # Change to true when ready to push to registry
        tags: ${{ env.STREAMLIT_IMAGE_NAME }}:latest, ${{ env.STREAMLIT_IMAGE_NAME }}:${{ github.sha }}
        # Example for Docker Hub: tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.STREAMLIT_IMAGE_NAME }}:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.STREAMLIT_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max